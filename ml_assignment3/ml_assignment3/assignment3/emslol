import numpy as np
from sklearn.mixture import GaussianMixture

import time


def em_segmentation(img, k, max_iter=20):
    """
    Learns a MoG model using the EM-algorithm for image-segmentation.

    Args:
        img: The input color image of shape [h, w, 3]
        k: The number of gaussians to be used

    Returns:
        label_img: A matrix of labels indicating the gaussian of size [h, w]

    """
    
    label_img = None
    
    #######################################################################
    # TODO:                                                               #
    # 1st: Augment the pixel features with their 2D coordinates to get    #
    #      features of the form RGBXY (see np.meshgrid)                   #
    # 2nd: Fit the MoG to the resulting data using                        #
    #      sklearn.mixture.GaussianMixture                                #
    # 3rd: Predict the assignment of the pixels to the gaussian and       #  
    #      generate the label-image                                       #
    #######################################################################
    width = img.shape[1]
    height = img.shape[0]
    rgb = img.shape[2]
    spatialDimension = 2
    label_img = img

    
    xvalues = np.arange(0,width,1);
    yvalues = np.arange(0,height,1);
    xx, yy = np.meshgrid(xvalues, yvalues)
    
    coor = np.stack((yy,xx),axis=2)
    img = np.concatenate((img,coor),axis=2)
    
    img = np.reshape(img,(height*width,rgb+spatialDimension))


    gaussianMixture = GaussianMixture(n_components=k)
    gaussianMixture.fit(img)
    img = gaussianMixture.predict(img)

    label_img = np.zeros([width*height,rgb])
    means = np.delete(gaussianMixture.means_,[3,4],axis=1)

    for i in range (img.shape[0]):
        label_img[i] = means[img[i]]
        
        
    
    label_img = np.reshape(label_img,(height,width,rgb))


    
    #######################################################################
    #                         END OF YOUR CODE                            #
    #######################################################################

    return label_img
                    